Object.defineProperty(exports, '__esModule', {
  value: true
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _lodashIsArray = require('lodash/isArray');

var _lodashIsArray2 = _interopRequireDefault(_lodashIsArray);

var _lodashIsObject = require('lodash/isObject');

var _lodashIsObject2 = _interopRequireDefault(_lodashIsObject);

var _lodashIsNil = require('lodash/isNil');

var _lodashIsNil2 = _interopRequireDefault(_lodashIsNil);

'use babel';

var ANY_TYPE = 'any';
exports.ANY_TYPE = ANY_TYPE;
var OBJECT_TYPE = 'object';
exports.OBJECT_TYPE = OBJECT_TYPE;
var ARRAY_TYPE = 'array';
exports.ARRAY_TYPE = ARRAY_TYPE;
var ONE_OF_TYPE = 'oneOf';
exports.ONE_OF_TYPE = ONE_OF_TYPE;
var ANY_OF_TYPE = 'anyOf';
exports.ANY_OF_TYPE = ANY_OF_TYPE;
var ALL_OF_TYPE = 'allOf';
exports.ALL_OF_TYPE = ALL_OF_TYPE;
var ENUM_TYPE = 'enum';
exports.ENUM_TYPE = ENUM_TYPE;
var BOOLEAN_TYPE = 'boolean';
exports.BOOLEAN_TYPE = BOOLEAN_TYPE;
var NUMBER_TYPE = 'number';
exports.NUMBER_TYPE = NUMBER_TYPE;
var STRING_TYPE = 'string';
exports.STRING_TYPE = STRING_TYPE;
var NULL_TYPE = 'null';

exports.NULL_TYPE = NULL_TYPE;
var schemaType = function schemaType(schema) {
  if ((0, _lodashIsNil2['default'])(schema)) {
    return ANY_TYPE;
  }

  if (!schema.allOf && !schema.anyOf && !schema.oneOf) {
    if (schema.type === 'object' || (0, _lodashIsObject2['default'])(schema.properties) && !schema.type) {
      return OBJECT_TYPE;
    } else if (schema.type === 'array' || (0, _lodashIsObject2['default'])(schema.items) && !schema.type) {
      return ARRAY_TYPE;
    }
  }

  if ((0, _lodashIsArray2['default'])(schema.oneOf)) {
    return ONE_OF_TYPE;
  } else if ((0, _lodashIsArray2['default'])(schema.anyOf)) {
    return ANY_OF_TYPE;
  } else if ((0, _lodashIsArray2['default'])(schema.allOf)) {
    return ALL_OF_TYPE;
  } else if ((0, _lodashIsObject2['default'])(schema['enum'])) {
    return ENUM_TYPE;
  }

  switch (schema.type) {
    case 'boolean':
      return BOOLEAN_TYPE;
    case 'number':
      return NUMBER_TYPE;
    case 'integer':
      return NUMBER_TYPE;
    case 'string':
      return STRING_TYPE;
    case 'null':
      return NULL_TYPE;
    default:
      break;
  }

  return ANY_TYPE;
};
exports.schemaType = schemaType;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3lvc2hpbm9yaXlhbWFndWNoaS9kb3RmaWxlcy8uYXRvbS9wYWNrYWdlcy9hdXRvY29tcGxldGUtanNvbi9zcmMvanNvbi1zY2hlbWEtdHlwZXMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7OzZCQUVvQixnQkFBZ0I7Ozs7OEJBQ2YsaUJBQWlCOzs7OzJCQUNwQixjQUFjOzs7O0FBSmhDLFdBQVcsQ0FBQTs7QUFNSixJQUFNLFFBQVEsR0FBRyxLQUFLLENBQUE7O0FBQ3RCLElBQU0sV0FBVyxHQUFHLFFBQVEsQ0FBQTs7QUFDNUIsSUFBTSxVQUFVLEdBQUcsT0FBTyxDQUFBOztBQUMxQixJQUFNLFdBQVcsR0FBRyxPQUFPLENBQUE7O0FBQzNCLElBQU0sV0FBVyxHQUFHLE9BQU8sQ0FBQTs7QUFDM0IsSUFBTSxXQUFXLEdBQUcsT0FBTyxDQUFBOztBQUMzQixJQUFNLFNBQVMsR0FBRyxNQUFNLENBQUE7O0FBQ3hCLElBQU0sWUFBWSxHQUFHLFNBQVMsQ0FBQTs7QUFDOUIsSUFBTSxXQUFXLEdBQUcsUUFBUSxDQUFBOztBQUM1QixJQUFNLFdBQVcsR0FBRyxRQUFRLENBQUE7O0FBQzVCLElBQU0sU0FBUyxHQUFHLE1BQU0sQ0FBQTs7O0FBRXhCLElBQU0sVUFBVSxHQUFHLFNBQWIsVUFBVSxDQUFHLE1BQU0sRUFBSTtBQUNsQyxNQUFJLDhCQUFNLE1BQU0sQ0FBQyxFQUFFO0FBQ2pCLFdBQU8sUUFBUSxDQUFBO0dBQ2hCOztBQUVELE1BQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUU7QUFDbkQsUUFBSSxNQUFNLENBQUMsSUFBSSxLQUFLLFFBQVEsSUFBSyxpQ0FBUyxNQUFNLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxBQUFDLEVBQUU7QUFDN0UsYUFBTyxXQUFXLENBQUE7S0FDbkIsTUFBTSxJQUFJLE1BQU0sQ0FBQyxJQUFJLEtBQUssT0FBTyxJQUFLLGlDQUFTLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEFBQUMsRUFBRTtBQUM5RSxhQUFPLFVBQVUsQ0FBQTtLQUNsQjtHQUNGOztBQUVELE1BQUksZ0NBQVEsTUFBTSxDQUFDLEtBQUssQ0FBQyxFQUFFO0FBQ3pCLFdBQU8sV0FBVyxDQUFBO0dBQ25CLE1BQU0sSUFBSSxnQ0FBUSxNQUFNLENBQUMsS0FBSyxDQUFDLEVBQUU7QUFDaEMsV0FBTyxXQUFXLENBQUE7R0FDbkIsTUFBTSxJQUFJLGdDQUFRLE1BQU0sQ0FBQyxLQUFLLENBQUMsRUFBRTtBQUNoQyxXQUFPLFdBQVcsQ0FBQTtHQUNuQixNQUFNLElBQUksaUNBQVMsTUFBTSxRQUFLLENBQUMsRUFBRTtBQUNoQyxXQUFPLFNBQVMsQ0FBQTtHQUNqQjs7QUFFRCxVQUFRLE1BQU0sQ0FBQyxJQUFJO0FBQ2pCLFNBQUssU0FBUztBQUFFLGFBQU8sWUFBWSxDQUFBO0FBQUEsQUFDbkMsU0FBSyxRQUFRO0FBQUUsYUFBTyxXQUFXLENBQUE7QUFBQSxBQUNqQyxTQUFLLFNBQVM7QUFBRSxhQUFPLFdBQVcsQ0FBQTtBQUFBLEFBQ2xDLFNBQUssUUFBUTtBQUFFLGFBQU8sV0FBVyxDQUFBO0FBQUEsQUFDakMsU0FBSyxNQUFNO0FBQUUsYUFBTyxTQUFTLENBQUE7QUFBQSxBQUM3QjtBQUFTLFlBQUs7QUFBQSxHQUNmOztBQUVELFNBQU8sUUFBUSxDQUFBO0NBQ2hCLENBQUEiLCJmaWxlIjoiL2hvbWUveW9zaGlub3JpeWFtYWd1Y2hpL2RvdGZpbGVzLy5hdG9tL3BhY2thZ2VzL2F1dG9jb21wbGV0ZS1qc29uL3NyYy9qc29uLXNjaGVtYS10eXBlcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2UgYmFiZWwnXG5cbmltcG9ydCBpc0FycmF5IGZyb20gJ2xvZGFzaC9pc0FycmF5J1xuaW1wb3J0IGlzT2JqZWN0IGZyb20gJ2xvZGFzaC9pc09iamVjdCdcbmltcG9ydCBpc05pbCBmcm9tICdsb2Rhc2gvaXNOaWwnXG5cbmV4cG9ydCBjb25zdCBBTllfVFlQRSA9ICdhbnknXG5leHBvcnQgY29uc3QgT0JKRUNUX1RZUEUgPSAnb2JqZWN0J1xuZXhwb3J0IGNvbnN0IEFSUkFZX1RZUEUgPSAnYXJyYXknXG5leHBvcnQgY29uc3QgT05FX09GX1RZUEUgPSAnb25lT2YnXG5leHBvcnQgY29uc3QgQU5ZX09GX1RZUEUgPSAnYW55T2YnXG5leHBvcnQgY29uc3QgQUxMX09GX1RZUEUgPSAnYWxsT2YnXG5leHBvcnQgY29uc3QgRU5VTV9UWVBFID0gJ2VudW0nXG5leHBvcnQgY29uc3QgQk9PTEVBTl9UWVBFID0gJ2Jvb2xlYW4nXG5leHBvcnQgY29uc3QgTlVNQkVSX1RZUEUgPSAnbnVtYmVyJ1xuZXhwb3J0IGNvbnN0IFNUUklOR19UWVBFID0gJ3N0cmluZydcbmV4cG9ydCBjb25zdCBOVUxMX1RZUEUgPSAnbnVsbCdcblxuZXhwb3J0IGNvbnN0IHNjaGVtYVR5cGUgPSBzY2hlbWEgPT4ge1xuICBpZiAoaXNOaWwoc2NoZW1hKSkge1xuICAgIHJldHVybiBBTllfVFlQRVxuICB9XG5cbiAgaWYgKCFzY2hlbWEuYWxsT2YgJiYgIXNjaGVtYS5hbnlPZiAmJiAhc2NoZW1hLm9uZU9mKSB7XG4gICAgaWYgKHNjaGVtYS50eXBlID09PSAnb2JqZWN0JyB8fCAoaXNPYmplY3Qoc2NoZW1hLnByb3BlcnRpZXMpICYmICFzY2hlbWEudHlwZSkpIHtcbiAgICAgIHJldHVybiBPQkpFQ1RfVFlQRVxuICAgIH0gZWxzZSBpZiAoc2NoZW1hLnR5cGUgPT09ICdhcnJheScgfHwgKGlzT2JqZWN0KHNjaGVtYS5pdGVtcykgJiYgIXNjaGVtYS50eXBlKSkge1xuICAgICAgcmV0dXJuIEFSUkFZX1RZUEVcbiAgICB9XG4gIH1cblxuICBpZiAoaXNBcnJheShzY2hlbWEub25lT2YpKSB7XG4gICAgcmV0dXJuIE9ORV9PRl9UWVBFXG4gIH0gZWxzZSBpZiAoaXNBcnJheShzY2hlbWEuYW55T2YpKSB7XG4gICAgcmV0dXJuIEFOWV9PRl9UWVBFXG4gIH0gZWxzZSBpZiAoaXNBcnJheShzY2hlbWEuYWxsT2YpKSB7XG4gICAgcmV0dXJuIEFMTF9PRl9UWVBFXG4gIH0gZWxzZSBpZiAoaXNPYmplY3Qoc2NoZW1hLmVudW0pKSB7XG4gICAgcmV0dXJuIEVOVU1fVFlQRVxuICB9XG5cbiAgc3dpdGNoIChzY2hlbWEudHlwZSkge1xuICAgIGNhc2UgJ2Jvb2xlYW4nOiByZXR1cm4gQk9PTEVBTl9UWVBFXG4gICAgY2FzZSAnbnVtYmVyJzogcmV0dXJuIE5VTUJFUl9UWVBFXG4gICAgY2FzZSAnaW50ZWdlcic6IHJldHVybiBOVU1CRVJfVFlQRVxuICAgIGNhc2UgJ3N0cmluZyc6IHJldHVybiBTVFJJTkdfVFlQRVxuICAgIGNhc2UgJ251bGwnOiByZXR1cm4gTlVMTF9UWVBFXG4gICAgZGVmYXVsdDogYnJlYWtcbiAgfVxuXG4gIHJldHVybiBBTllfVFlQRVxufVxuIl19