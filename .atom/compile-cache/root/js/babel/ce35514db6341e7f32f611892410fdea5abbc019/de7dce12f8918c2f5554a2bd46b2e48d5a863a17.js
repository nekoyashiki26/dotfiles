Object.defineProperty(exports, '__esModule', {
  value: true
});
exports.activate = activate;
exports.provideAutocomplete = provideAutocomplete;
exports.provideJsonSchemaProviders = provideJsonSchemaProviders;
exports.provideProposalProviders = provideProposalProviders;
exports.consumeJsonSchemaProviders = consumeJsonSchemaProviders;
exports.consumeJsonProposalProviders = consumeJsonProposalProviders;
exports.dispose = dispose;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _lodashIsArray = require('lodash/isArray');

var _lodashIsArray2 = _interopRequireDefault(_lodashIsArray);

var _lodashRemove = require('lodash/remove');

var _lodashRemove2 = _interopRequireDefault(_lodashRemove);

var _atom = require('atom');

var _rootProvider = require('./root-provider');

var _rootProvider2 = _interopRequireDefault(_rootProvider);

var _jsonSchemaProposalProvider = require('./json-schema-proposal-provider');

var _providers = require('./providers');

'use babel';

var PROVIDERS = null;

function activate() {
  PROVIDERS = [];
}

function provideAutocomplete() {
  return new _rootProvider2['default'](PROVIDERS);
}

function provideJsonSchemaProviders() {
  return _providers.defaultSchemaProviders;
}

function provideProposalProviders() {
  return _providers.defaultProviders;
}

function createPromiseDisposable(promise) {
  return new _atom.Disposable(function () {
    promise.then(function (provider) {
      return (0, _lodashRemove2['default'])(PROVIDERS, function (e) {
        return e === provider;
      });
    });
  });
}

function createSyncDisposable(provider) {
  return new _atom.Disposable(function () {
    (0, _lodashRemove2['default'])(PROVIDERS, function (e) {
      return e === provider;
    });
  });
}

function createCompositeDisposable(providers) {
  var composite = new _atom.CompositeDisposable();
  providers.forEach(function (disposable) {
    return composite.add(disposable);
  });
  return composite;
}

function consumeJsonSchemaProviders(provider) {
  var schemaProviders = (0, _lodashIsArray2['default'])(provider) ? provider : [provider];
  var providerPromises = schemaProviders.filter(function (s) {
    return Boolean(s);
  }).map(function (s) {
    return _jsonSchemaProposalProvider.JsonSchemaProposalProvider.createFromProvider(s);
  });
  providerPromises.forEach(function (promise) {
    return promise.then(function (p) {
      return PROVIDERS.push(p);
    });
  });
  var disposables = providerPromises.map(function (promise) {
    return createPromiseDisposable(promise);
  });
  return createCompositeDisposable(disposables);
}

function consumeJsonProposalProviders(provider) {
  var providers = ((0, _lodashIsArray2['default'])(provider) ? provider : [provider]).filter(function (p) {
    return Boolean(p);
  });
  providers.forEach(function (p) {
    return PROVIDERS.push(p);
  });
  return createCompositeDisposable(providers.map(function (p) {
    return createSyncDisposable(p);
  }));
}

function dispose() {
  PROVIDERS.length = 0;
  PROVIDERS = null;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3lvc2hpbm9yaXlhbWFndWNoaS9kb3RmaWxlcy8uYXRvbS9wYWNrYWdlcy9hdXRvY29tcGxldGUtanNvbi9zcmMvbWFpbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OzZCQUVvQixnQkFBZ0I7Ozs7NEJBQ2pCLGVBQWU7Ozs7b0JBQ2MsTUFBTTs7NEJBRTdCLGlCQUFpQjs7OzswQ0FDQyxpQ0FBaUM7O3lCQUNuQixhQUFhOztBQVJ0RSxXQUFXLENBQUE7O0FBVVgsSUFBSSxTQUFTLEdBQUcsSUFBSSxDQUFBOztBQUViLFNBQVMsUUFBUSxHQUFHO0FBQ3pCLFdBQVMsR0FBRyxFQUFFLENBQUE7Q0FDZjs7QUFFTSxTQUFTLG1CQUFtQixHQUFHO0FBQ3BDLFNBQU8sOEJBQWlCLFNBQVMsQ0FBQyxDQUFBO0NBQ25DOztBQUVNLFNBQVMsMEJBQTBCLEdBQUc7QUFDM0MsMkNBQTZCO0NBQzlCOztBQUVNLFNBQVMsd0JBQXdCLEdBQUc7QUFDekMscUNBQXVCO0NBQ3hCOztBQUVELFNBQVMsdUJBQXVCLENBQUMsT0FBTyxFQUFFO0FBQ3hDLFNBQU8scUJBQWUsWUFBTTtBQUMxQixXQUFPLENBQUMsSUFBSSxDQUFDLFVBQUEsUUFBUTthQUFJLCtCQUFPLFNBQVMsRUFBRSxVQUFBLENBQUM7ZUFBSSxDQUFDLEtBQUssUUFBUTtPQUFBLENBQUM7S0FBQSxDQUFDLENBQUE7R0FDakUsQ0FBQyxDQUFBO0NBQ0g7O0FBRUQsU0FBUyxvQkFBb0IsQ0FBQyxRQUFRLEVBQUU7QUFDdEMsU0FBTyxxQkFBZSxZQUFNO0FBQzFCLG1DQUFPLFNBQVMsRUFBRSxVQUFBLENBQUM7YUFBSSxDQUFDLEtBQUssUUFBUTtLQUFBLENBQUMsQ0FBQTtHQUN2QyxDQUFDLENBQUE7Q0FDSDs7QUFFRCxTQUFTLHlCQUF5QixDQUFDLFNBQVMsRUFBRTtBQUM1QyxNQUFNLFNBQVMsR0FBRywrQkFBeUIsQ0FBQTtBQUMzQyxXQUFTLENBQUMsT0FBTyxDQUFDLFVBQUEsVUFBVTtXQUFJLFNBQVMsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDO0dBQUEsQ0FBQyxDQUFBO0FBQzFELFNBQU8sU0FBUyxDQUFBO0NBQ2pCOztBQUVNLFNBQVMsMEJBQTBCLENBQUMsUUFBUSxFQUFFO0FBQ25ELE1BQU0sZUFBZSxHQUFHLGdDQUFRLFFBQVEsQ0FBQyxHQUFHLFFBQVEsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFBO0FBQ2pFLE1BQU0sZ0JBQWdCLEdBQUcsZUFBZSxDQUFDLE1BQU0sQ0FBQyxVQUFBLENBQUM7V0FBSSxPQUFPLENBQUMsQ0FBQyxDQUFDO0dBQUEsQ0FBQyxDQUM3RCxHQUFHLENBQUMsVUFBQSxDQUFDO1dBQUksdURBQTJCLGtCQUFrQixDQUFDLENBQUMsQ0FBQztHQUFBLENBQUMsQ0FBQTtBQUM3RCxrQkFBZ0IsQ0FBQyxPQUFPLENBQUMsVUFBQSxPQUFPO1dBQUksT0FBTyxDQUFDLElBQUksQ0FBQyxVQUFBLENBQUM7YUFBSSxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztLQUFBLENBQUM7R0FBQSxDQUFDLENBQUE7QUFDekUsTUFBTSxXQUFXLEdBQUcsZ0JBQWdCLENBQUMsR0FBRyxDQUFDLFVBQUEsT0FBTztXQUFJLHVCQUF1QixDQUFDLE9BQU8sQ0FBQztHQUFBLENBQUMsQ0FBQTtBQUNyRixTQUFPLHlCQUF5QixDQUFDLFdBQVcsQ0FBQyxDQUFBO0NBQzlDOztBQUVNLFNBQVMsNEJBQTRCLENBQUMsUUFBUSxFQUFFO0FBQ3JELE1BQU0sU0FBUyxHQUFHLENBQUMsZ0NBQVEsUUFBUSxDQUFDLEdBQUcsUUFBUSxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUEsQ0FBRSxNQUFNLENBQUMsVUFBQSxDQUFDO1dBQUksT0FBTyxDQUFDLENBQUMsQ0FBQztHQUFBLENBQUMsQ0FBQTtBQUNyRixXQUFTLENBQUMsT0FBTyxDQUFDLFVBQUEsQ0FBQztXQUFJLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0dBQUEsQ0FBQyxDQUFBO0FBQ3pDLFNBQU8seUJBQXlCLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxVQUFBLENBQUM7V0FBSSxvQkFBb0IsQ0FBQyxDQUFDLENBQUM7R0FBQSxDQUFDLENBQUMsQ0FBQTtDQUM5RTs7QUFFTSxTQUFTLE9BQU8sR0FBRztBQUN4QixXQUFTLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQTtBQUNwQixXQUFTLEdBQUcsSUFBSSxDQUFBO0NBQ2pCIiwiZmlsZSI6Ii9ob21lL3lvc2hpbm9yaXlhbWFndWNoaS9kb3RmaWxlcy8uYXRvbS9wYWNrYWdlcy9hdXRvY29tcGxldGUtanNvbi9zcmMvbWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2UgYmFiZWwnXG5cbmltcG9ydCBpc0FycmF5IGZyb20gJ2xvZGFzaC9pc0FycmF5J1xuaW1wb3J0IHJlbW92ZSBmcm9tICdsb2Rhc2gvcmVtb3ZlJ1xuaW1wb3J0IHsgQ29tcG9zaXRlRGlzcG9zYWJsZSwgRGlzcG9zYWJsZSB9IGZyb20gJ2F0b20nXG5cbmltcG9ydCBSb290UHJvdmlkZXIgZnJvbSAnLi9yb290LXByb3ZpZGVyJ1xuaW1wb3J0IHsgSnNvblNjaGVtYVByb3Bvc2FsUHJvdmlkZXIgfSBmcm9tICcuL2pzb24tc2NoZW1hLXByb3Bvc2FsLXByb3ZpZGVyJ1xuaW1wb3J0IHsgZGVmYXVsdFByb3ZpZGVycywgZGVmYXVsdFNjaGVtYVByb3ZpZGVycyB9IGZyb20gJy4vcHJvdmlkZXJzJ1xuXG5sZXQgUFJPVklERVJTID0gbnVsbFxuXG5leHBvcnQgZnVuY3Rpb24gYWN0aXZhdGUoKSB7XG4gIFBST1ZJREVSUyA9IFtdXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwcm92aWRlQXV0b2NvbXBsZXRlKCkge1xuICByZXR1cm4gbmV3IFJvb3RQcm92aWRlcihQUk9WSURFUlMpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwcm92aWRlSnNvblNjaGVtYVByb3ZpZGVycygpIHtcbiAgcmV0dXJuIGRlZmF1bHRTY2hlbWFQcm92aWRlcnNcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHByb3ZpZGVQcm9wb3NhbFByb3ZpZGVycygpIHtcbiAgcmV0dXJuIGRlZmF1bHRQcm92aWRlcnNcbn1cblxuZnVuY3Rpb24gY3JlYXRlUHJvbWlzZURpc3Bvc2FibGUocHJvbWlzZSkge1xuICByZXR1cm4gbmV3IERpc3Bvc2FibGUoKCkgPT4ge1xuICAgIHByb21pc2UudGhlbihwcm92aWRlciA9PiByZW1vdmUoUFJPVklERVJTLCBlID0+IGUgPT09IHByb3ZpZGVyKSlcbiAgfSlcbn1cblxuZnVuY3Rpb24gY3JlYXRlU3luY0Rpc3Bvc2FibGUocHJvdmlkZXIpIHtcbiAgcmV0dXJuIG5ldyBEaXNwb3NhYmxlKCgpID0+IHtcbiAgICByZW1vdmUoUFJPVklERVJTLCBlID0+IGUgPT09IHByb3ZpZGVyKVxuICB9KVxufVxuXG5mdW5jdGlvbiBjcmVhdGVDb21wb3NpdGVEaXNwb3NhYmxlKHByb3ZpZGVycykge1xuICBjb25zdCBjb21wb3NpdGUgPSBuZXcgQ29tcG9zaXRlRGlzcG9zYWJsZSgpXG4gIHByb3ZpZGVycy5mb3JFYWNoKGRpc3Bvc2FibGUgPT4gY29tcG9zaXRlLmFkZChkaXNwb3NhYmxlKSlcbiAgcmV0dXJuIGNvbXBvc2l0ZVxufVxuXG5leHBvcnQgZnVuY3Rpb24gY29uc3VtZUpzb25TY2hlbWFQcm92aWRlcnMocHJvdmlkZXIpIHtcbiAgY29uc3Qgc2NoZW1hUHJvdmlkZXJzID0gaXNBcnJheShwcm92aWRlcikgPyBwcm92aWRlciA6IFtwcm92aWRlcl1cbiAgY29uc3QgcHJvdmlkZXJQcm9taXNlcyA9IHNjaGVtYVByb3ZpZGVycy5maWx0ZXIocyA9PiBCb29sZWFuKHMpKVxuICAgIC5tYXAocyA9PiBKc29uU2NoZW1hUHJvcG9zYWxQcm92aWRlci5jcmVhdGVGcm9tUHJvdmlkZXIocykpXG4gIHByb3ZpZGVyUHJvbWlzZXMuZm9yRWFjaChwcm9taXNlID0+IHByb21pc2UudGhlbihwID0+IFBST1ZJREVSUy5wdXNoKHApKSlcbiAgY29uc3QgZGlzcG9zYWJsZXMgPSBwcm92aWRlclByb21pc2VzLm1hcChwcm9taXNlID0+IGNyZWF0ZVByb21pc2VEaXNwb3NhYmxlKHByb21pc2UpKVxuICByZXR1cm4gY3JlYXRlQ29tcG9zaXRlRGlzcG9zYWJsZShkaXNwb3NhYmxlcylcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNvbnN1bWVKc29uUHJvcG9zYWxQcm92aWRlcnMocHJvdmlkZXIpIHtcbiAgY29uc3QgcHJvdmlkZXJzID0gKGlzQXJyYXkocHJvdmlkZXIpID8gcHJvdmlkZXIgOiBbcHJvdmlkZXJdKS5maWx0ZXIocCA9PiBCb29sZWFuKHApKVxuICBwcm92aWRlcnMuZm9yRWFjaChwID0+IFBST1ZJREVSUy5wdXNoKHApKVxuICByZXR1cm4gY3JlYXRlQ29tcG9zaXRlRGlzcG9zYWJsZShwcm92aWRlcnMubWFwKHAgPT4gY3JlYXRlU3luY0Rpc3Bvc2FibGUocCkpKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZGlzcG9zZSgpIHtcbiAgUFJPVklERVJTLmxlbmd0aCA9IDBcbiAgUFJPVklERVJTID0gbnVsbFxufVxuIl19